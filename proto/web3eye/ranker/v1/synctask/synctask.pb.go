// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: web3eye/ranker/v1/synctask/synctask.proto

package synctask

import (
	web3eye "github.com/web3eye-io/Web3Eye/proto/web3eye"
	cttype "github.com/web3eye-io/Web3Eye/proto/web3eye/nftmeta/v1/cttype"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *string           `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	ChainType   *cttype.ChainType `protobuf:"varint,20,opt,name=ChainType,proto3,enum=cttype.ChainType,oneof" json:"ChainType,omitempty"`
	ChainID     *int32            `protobuf:"varint,30,opt,name=ChainID,proto3,oneof" json:"ChainID,omitempty"`
	Start       *uint64           `protobuf:"varint,40,opt,name=Start,proto3,oneof" json:"Start,omitempty"`
	End         *uint64           `protobuf:"varint,50,opt,name=End,proto3,oneof" json:"End,omitempty"`
	Current     *uint64           `protobuf:"varint,60,opt,name=Current,proto3,oneof" json:"Current,omitempty"`
	Topic       *string           `protobuf:"bytes,70,opt,name=Topic,proto3,oneof" json:"Topic,omitempty"`
	Description *string           `protobuf:"bytes,80,opt,name=Description,proto3,oneof" json:"Description,omitempty"`
	SyncState   *cttype.SyncState `protobuf:"varint,90,opt,name=SyncState,proto3,enum=cttype.SyncState,oneof" json:"SyncState,omitempty"`
	Remark      *string           `protobuf:"bytes,100,opt,name=Remark,proto3,oneof" json:"Remark,omitempty"`
}

func (x *SyncTaskReq) Reset() {
	*x = SyncTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTaskReq) ProtoMessage() {}

func (x *SyncTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTaskReq.ProtoReflect.Descriptor instead.
func (*SyncTaskReq) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{0}
}

func (x *SyncTaskReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *SyncTaskReq) GetChainType() cttype.ChainType {
	if x != nil && x.ChainType != nil {
		return *x.ChainType
	}
	return cttype.ChainType(0)
}

func (x *SyncTaskReq) GetChainID() int32 {
	if x != nil && x.ChainID != nil {
		return *x.ChainID
	}
	return 0
}

func (x *SyncTaskReq) GetStart() uint64 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

func (x *SyncTaskReq) GetEnd() uint64 {
	if x != nil && x.End != nil {
		return *x.End
	}
	return 0
}

func (x *SyncTaskReq) GetCurrent() uint64 {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return 0
}

func (x *SyncTaskReq) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

func (x *SyncTaskReq) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *SyncTaskReq) GetSyncState() cttype.SyncState {
	if x != nil && x.SyncState != nil {
		return *x.SyncState
	}
	return cttype.SyncState(0)
}

func (x *SyncTaskReq) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type SyncTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string           `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	ChainType   cttype.ChainType `protobuf:"varint,20,opt,name=ChainType,proto3,enum=cttype.ChainType" json:"ChainType,omitempty"`
	ChainID     int32            `protobuf:"varint,30,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	Start       uint64           `protobuf:"varint,40,opt,name=Start,proto3" json:"Start,omitempty"`
	End         uint64           `protobuf:"varint,50,opt,name=End,proto3" json:"End,omitempty"`
	Current     uint64           `protobuf:"varint,60,opt,name=Current,proto3" json:"Current,omitempty"`
	Topic       string           `protobuf:"bytes,70,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Description string           `protobuf:"bytes,80,opt,name=Description,proto3" json:"Description,omitempty"`
	SyncState   cttype.SyncState `protobuf:"varint,90,opt,name=SyncState,proto3,enum=cttype.SyncState" json:"SyncState,omitempty"`
	Remark      string           `protobuf:"bytes,100,opt,name=Remark,proto3" json:"Remark,omitempty"`
}

func (x *SyncTask) Reset() {
	*x = SyncTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTask) ProtoMessage() {}

func (x *SyncTask) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTask.ProtoReflect.Descriptor instead.
func (*SyncTask) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{1}
}

func (x *SyncTask) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SyncTask) GetChainType() cttype.ChainType {
	if x != nil {
		return x.ChainType
	}
	return cttype.ChainType(0)
}

func (x *SyncTask) GetChainID() int32 {
	if x != nil {
		return x.ChainID
	}
	return 0
}

func (x *SyncTask) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *SyncTask) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *SyncTask) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *SyncTask) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SyncTask) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SyncTask) GetSyncState() cttype.SyncState {
	if x != nil {
		return x.SyncState
	}
	return cttype.SyncState(0)
}

func (x *SyncTask) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *web3eye.StringVal      `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	ChainType   *web3eye.StringVal      `protobuf:"bytes,20,opt,name=ChainType,proto3" json:"ChainType,omitempty"`
	ChainID     *web3eye.Int32Val       `protobuf:"bytes,30,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	Start       *web3eye.Uint64Val      `protobuf:"bytes,40,opt,name=Start,proto3" json:"Start,omitempty"`
	End         *web3eye.Uint64Val      `protobuf:"bytes,50,opt,name=End,proto3" json:"End,omitempty"`
	Current     *web3eye.Uint64Val      `protobuf:"bytes,60,opt,name=Current,proto3" json:"Current,omitempty"`
	Topic       *web3eye.StringVal      `protobuf:"bytes,70,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Description *web3eye.StringVal      `protobuf:"bytes,80,opt,name=Description,proto3" json:"Description,omitempty"`
	SyncState   *web3eye.StringVal      `protobuf:"bytes,90,opt,name=SyncState,proto3" json:"SyncState,omitempty"`
	Remark      *web3eye.StringVal      `protobuf:"bytes,100,opt,name=Remark,proto3" json:"Remark,omitempty"`
	IDs         *web3eye.StringSliceVal `protobuf:"bytes,110,opt,name=IDs,proto3" json:"IDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *web3eye.StringVal {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetChainType() *web3eye.StringVal {
	if x != nil {
		return x.ChainType
	}
	return nil
}

func (x *Conds) GetChainID() *web3eye.Int32Val {
	if x != nil {
		return x.ChainID
	}
	return nil
}

func (x *Conds) GetStart() *web3eye.Uint64Val {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Conds) GetEnd() *web3eye.Uint64Val {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Conds) GetCurrent() *web3eye.Uint64Val {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *Conds) GetTopic() *web3eye.StringVal {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *Conds) GetDescription() *web3eye.StringVal {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Conds) GetSyncState() *web3eye.StringVal {
	if x != nil {
		return x.SyncState
	}
	return nil
}

func (x *Conds) GetRemark() *web3eye.StringVal {
	if x != nil {
		return x.Remark
	}
	return nil
}

func (x *Conds) GetIDs() *web3eye.StringSliceVal {
	if x != nil {
		return x.IDs
	}
	return nil
}

type GetSyncTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetSyncTaskRequest) Reset() {
	*x = GetSyncTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncTaskRequest) ProtoMessage() {}

func (x *GetSyncTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncTaskRequest.ProtoReflect.Descriptor instead.
func (*GetSyncTaskRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{3}
}

func (x *GetSyncTaskRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetSyncTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SyncTask `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetSyncTaskResponse) Reset() {
	*x = GetSyncTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncTaskResponse) ProtoMessage() {}

func (x *GetSyncTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncTaskResponse.ProtoReflect.Descriptor instead.
func (*GetSyncTaskResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{4}
}

func (x *GetSyncTaskResponse) GetInfo() *SyncTask {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSyncTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetSyncTasksRequest) Reset() {
	*x = GetSyncTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncTasksRequest) ProtoMessage() {}

func (x *GetSyncTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncTasksRequest.ProtoReflect.Descriptor instead.
func (*GetSyncTasksRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{5}
}

func (x *GetSyncTasksRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetSyncTasksRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSyncTasksRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSyncTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SyncTask `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32      `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetSyncTasksResponse) Reset() {
	*x = GetSyncTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncTasksResponse) ProtoMessage() {}

func (x *GetSyncTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncTasksResponse.ProtoReflect.Descriptor instead.
func (*GetSyncTasksResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{6}
}

func (x *GetSyncTasksResponse) GetInfos() []*SyncTask {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetSyncTasksResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetSyncTaskOnlyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *GetSyncTaskOnlyRequest) Reset() {
	*x = GetSyncTaskOnlyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncTaskOnlyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncTaskOnlyRequest) ProtoMessage() {}

func (x *GetSyncTaskOnlyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncTaskOnlyRequest.ProtoReflect.Descriptor instead.
func (*GetSyncTaskOnlyRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{7}
}

func (x *GetSyncTaskOnlyRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type GetSyncTaskOnlyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SyncTask `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetSyncTaskOnlyResponse) Reset() {
	*x = GetSyncTaskOnlyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncTaskOnlyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncTaskOnlyResponse) ProtoMessage() {}

func (x *GetSyncTaskOnlyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncTaskOnlyResponse.ProtoReflect.Descriptor instead.
func (*GetSyncTaskOnlyResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{8}
}

func (x *GetSyncTaskOnlyResponse) GetInfo() *SyncTask {
	if x != nil {
		return x.Info
	}
	return nil
}

type CountSyncTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *CountSyncTasksRequest) Reset() {
	*x = CountSyncTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSyncTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSyncTasksRequest) ProtoMessage() {}

func (x *CountSyncTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSyncTasksRequest.ProtoReflect.Descriptor instead.
func (*CountSyncTasksRequest) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{9}
}

func (x *CountSyncTasksRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type CountSyncTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info uint32 `protobuf:"varint,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CountSyncTasksResponse) Reset() {
	*x = CountSyncTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSyncTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSyncTasksResponse) ProtoMessage() {}

func (x *CountSyncTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSyncTasksResponse.ProtoReflect.Descriptor instead.
func (*CountSyncTasksResponse) Descriptor() ([]byte, []int) {
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP(), []int{10}
}

func (x *CountSyncTasksResponse) GetInfo() uint32 {
	if x != nil {
		return x.Info
	}
	return 0
}

var File_web3eye_ranker_v1_synctask_synctask_proto protoreflect.FileDescriptor

var file_web3eye_ranker_v1_synctask_synctask_proto_rawDesc = []byte{
	0x0a, 0x29, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x73, 0x79, 0x6e,
	0x63, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x72, 0x61, 0x6e,
	0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x77,
	0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2f, 0x72, 0x61,
	0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x63,
	0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x03, 0x0a, 0x0b,
	0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x34, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x15, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x48, 0x04, 0x52,
	0x03, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x48, 0x05, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x74,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x08,
	0x52, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x45, 0x6e, 0x64, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xa8, 0x02,
	0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x09, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x45,
	0x6e, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x5a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xf1, 0x03, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x22, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x52, 0x02, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x33,
	0x65, 0x79, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x09, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x65, 0x62, 0x33,
	0x65, 0x79, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x55,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x24, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77,
	0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c,
	0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65,
	0x2e, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x34, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x09, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x29, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x52, 0x03, 0x49, 0x44, 0x73, 0x22, 0x24, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x74, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79,
	0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x60, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x49, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61,
	0x73, 0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x4b,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x48, 0x0a, 0x15, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x32, 0xa0, 0x04, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x7b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26,
	0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x8c, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x2a, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73,
	0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x72,
	0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x73, 0x79,
	0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x6f, 0x6e, 0x6c, 0x79, 0x12, 0x7f, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x27, 0x2e, 0x72, 0x61,
	0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x87, 0x01, 0x0a,
	0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12,
	0x29, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x72, 0x61, 0x6e,
	0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01,
	0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x73, 0x79, 0x6e,
	0x63, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x65, 0x79, 0x65, 0x2d, 0x69, 0x6f, 0x2f,
	0x57, 0x65, 0x62, 0x33, 0x45, 0x79, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x65,
	0x62, 0x33, 0x65, 0x79, 0x65, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x6e, 0x63, 0x74, 0x61, 0x73, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_web3eye_ranker_v1_synctask_synctask_proto_rawDescOnce sync.Once
	file_web3eye_ranker_v1_synctask_synctask_proto_rawDescData = file_web3eye_ranker_v1_synctask_synctask_proto_rawDesc
)

func file_web3eye_ranker_v1_synctask_synctask_proto_rawDescGZIP() []byte {
	file_web3eye_ranker_v1_synctask_synctask_proto_rawDescOnce.Do(func() {
		file_web3eye_ranker_v1_synctask_synctask_proto_rawDescData = protoimpl.X.CompressGZIP(file_web3eye_ranker_v1_synctask_synctask_proto_rawDescData)
	})
	return file_web3eye_ranker_v1_synctask_synctask_proto_rawDescData
}

var file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_web3eye_ranker_v1_synctask_synctask_proto_goTypes = []interface{}{
	(*SyncTaskReq)(nil),             // 0: ranker.v1.synctask.SyncTaskReq
	(*SyncTask)(nil),                // 1: ranker.v1.synctask.SyncTask
	(*Conds)(nil),                   // 2: ranker.v1.synctask.Conds
	(*GetSyncTaskRequest)(nil),      // 3: ranker.v1.synctask.GetSyncTaskRequest
	(*GetSyncTaskResponse)(nil),     // 4: ranker.v1.synctask.GetSyncTaskResponse
	(*GetSyncTasksRequest)(nil),     // 5: ranker.v1.synctask.GetSyncTasksRequest
	(*GetSyncTasksResponse)(nil),    // 6: ranker.v1.synctask.GetSyncTasksResponse
	(*GetSyncTaskOnlyRequest)(nil),  // 7: ranker.v1.synctask.GetSyncTaskOnlyRequest
	(*GetSyncTaskOnlyResponse)(nil), // 8: ranker.v1.synctask.GetSyncTaskOnlyResponse
	(*CountSyncTasksRequest)(nil),   // 9: ranker.v1.synctask.CountSyncTasksRequest
	(*CountSyncTasksResponse)(nil),  // 10: ranker.v1.synctask.CountSyncTasksResponse
	(cttype.ChainType)(0),           // 11: cttype.ChainType
	(cttype.SyncState)(0),           // 12: cttype.SyncState
	(*web3eye.StringVal)(nil),       // 13: web3eye.StringVal
	(*web3eye.Int32Val)(nil),        // 14: web3eye.Int32Val
	(*web3eye.Uint64Val)(nil),       // 15: web3eye.Uint64Val
	(*web3eye.StringSliceVal)(nil),  // 16: web3eye.StringSliceVal
}
var file_web3eye_ranker_v1_synctask_synctask_proto_depIdxs = []int32{
	11, // 0: ranker.v1.synctask.SyncTaskReq.ChainType:type_name -> cttype.ChainType
	12, // 1: ranker.v1.synctask.SyncTaskReq.SyncState:type_name -> cttype.SyncState
	11, // 2: ranker.v1.synctask.SyncTask.ChainType:type_name -> cttype.ChainType
	12, // 3: ranker.v1.synctask.SyncTask.SyncState:type_name -> cttype.SyncState
	13, // 4: ranker.v1.synctask.Conds.ID:type_name -> web3eye.StringVal
	13, // 5: ranker.v1.synctask.Conds.ChainType:type_name -> web3eye.StringVal
	14, // 6: ranker.v1.synctask.Conds.ChainID:type_name -> web3eye.Int32Val
	15, // 7: ranker.v1.synctask.Conds.Start:type_name -> web3eye.Uint64Val
	15, // 8: ranker.v1.synctask.Conds.End:type_name -> web3eye.Uint64Val
	15, // 9: ranker.v1.synctask.Conds.Current:type_name -> web3eye.Uint64Val
	13, // 10: ranker.v1.synctask.Conds.Topic:type_name -> web3eye.StringVal
	13, // 11: ranker.v1.synctask.Conds.Description:type_name -> web3eye.StringVal
	13, // 12: ranker.v1.synctask.Conds.SyncState:type_name -> web3eye.StringVal
	13, // 13: ranker.v1.synctask.Conds.Remark:type_name -> web3eye.StringVal
	16, // 14: ranker.v1.synctask.Conds.IDs:type_name -> web3eye.StringSliceVal
	1,  // 15: ranker.v1.synctask.GetSyncTaskResponse.Info:type_name -> ranker.v1.synctask.SyncTask
	2,  // 16: ranker.v1.synctask.GetSyncTasksRequest.Conds:type_name -> ranker.v1.synctask.Conds
	1,  // 17: ranker.v1.synctask.GetSyncTasksResponse.Infos:type_name -> ranker.v1.synctask.SyncTask
	2,  // 18: ranker.v1.synctask.GetSyncTaskOnlyRequest.Conds:type_name -> ranker.v1.synctask.Conds
	1,  // 19: ranker.v1.synctask.GetSyncTaskOnlyResponse.Info:type_name -> ranker.v1.synctask.SyncTask
	2,  // 20: ranker.v1.synctask.CountSyncTasksRequest.Conds:type_name -> ranker.v1.synctask.Conds
	3,  // 21: ranker.v1.synctask.Manager.GetSyncTask:input_type -> ranker.v1.synctask.GetSyncTaskRequest
	7,  // 22: ranker.v1.synctask.Manager.GetSyncTaskOnly:input_type -> ranker.v1.synctask.GetSyncTaskOnlyRequest
	5,  // 23: ranker.v1.synctask.Manager.GetSyncTasks:input_type -> ranker.v1.synctask.GetSyncTasksRequest
	9,  // 24: ranker.v1.synctask.Manager.CountSyncTasks:input_type -> ranker.v1.synctask.CountSyncTasksRequest
	4,  // 25: ranker.v1.synctask.Manager.GetSyncTask:output_type -> ranker.v1.synctask.GetSyncTaskResponse
	8,  // 26: ranker.v1.synctask.Manager.GetSyncTaskOnly:output_type -> ranker.v1.synctask.GetSyncTaskOnlyResponse
	6,  // 27: ranker.v1.synctask.Manager.GetSyncTasks:output_type -> ranker.v1.synctask.GetSyncTasksResponse
	10, // 28: ranker.v1.synctask.Manager.CountSyncTasks:output_type -> ranker.v1.synctask.CountSyncTasksResponse
	25, // [25:29] is the sub-list for method output_type
	21, // [21:25] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_web3eye_ranker_v1_synctask_synctask_proto_init() }
func file_web3eye_ranker_v1_synctask_synctask_proto_init() {
	if File_web3eye_ranker_v1_synctask_synctask_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncTaskOnlyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncTaskOnlyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSyncTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSyncTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_web3eye_ranker_v1_synctask_synctask_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_web3eye_ranker_v1_synctask_synctask_proto_goTypes,
		DependencyIndexes: file_web3eye_ranker_v1_synctask_synctask_proto_depIdxs,
		MessageInfos:      file_web3eye_ranker_v1_synctask_synctask_proto_msgTypes,
	}.Build()
	File_web3eye_ranker_v1_synctask_synctask_proto = out.File
	file_web3eye_ranker_v1_synctask_synctask_proto_rawDesc = nil
	file_web3eye_ranker_v1_synctask_synctask_proto_goTypes = nil
	file_web3eye_ranker_v1_synctask_synctask_proto_depIdxs = nil
}
